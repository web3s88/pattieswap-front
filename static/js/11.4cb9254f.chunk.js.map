{"version":3,"sources":["hooks/useApproveConfirmTransaction.ts","components/ApproveConfirmButtons.tsx","views/Nft/market/Profile/hooks/useFetchUserNfts.tsx","state/teams/hooks.ts","views/ProfileCreation/SelectionCard.tsx","../node_modules/lodash/_shuffleSelf.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","views/ProfileCreation/config.ts","views/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/ProfileCreation/Header.tsx","views/ProfileCreation/WalletNotConnected.tsx","views/ProfileCreation/NextStepButton.tsx","views/ProfileCreation/contexts/hook.ts","views/ProfileCreation/Mint.tsx","views/ProfileCreation/ProfilePicture.tsx","views/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/ProfileCreation/UserName.tsx","utils/fetchWithTimeout.ts","views/ProfileCreation/ConfirmProfileCreationModal.tsx","views/ProfileCreation/Steps.tsx","views/ProfileCreation/index.tsx","state/nftMarket/hooks.ts"],"names":["initialState","approvalState","confirmState","reducer","state","actions","type","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","onApproveSuccess","t","useTranslation","account","useWeb3React","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","useEffect","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","hasApproveFailed","hasConfirmFailed","handleApprove","a","tx","wait","receipt","status","handleConfirm","params","ButtonArrangement","StyledApproveConfirmButtonRow","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","disabled","onClick","endIcon","undefined","isLoading","justifyContent","id","useFetchUserNfts","useAppDispatch","useProfile","profile","isProfileInitialized","isInitialized","isProfileLoading","userNftsInitializationState","useUserNfts","collections","useGetCollections","hasProfileNft","tokenId","profileNftTokenId","toString","profileNftCollectionAddress","collectionAddress","profileNftWithCollectionAddress","useMemo","nftLocation","NftLocation","PROFILE","previousProfileNftTokenId","usePreviousValue","shouldFetch","UserNftInitializationState","UNINITIALIZED","hasAccountSwitched","isEmpty","fetchUserNfts","useTeam","team","useSelector","teams","data","fetchTeam","useTeams","fetchTeams","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","SelectionCard","name","value","isChecked","image","onChange","children","props","isSuccess","mb","checked","e","target","style","flex","baseRandom","require","module","exports","array","size","index","length","lastIndex","rand","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getTime","compareAsc","diff","cloneObject","dirtyObject","assign","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","differenceInSeconds","Math","floor","ceil","MINT_COST","parseUnits","REGISTER_COST","STARTER_NFT_BUNNY_IDS","totalCost","add","allowance","mul","currentStep","teamId","selectedNft","userName","minimumCakeRequired","action","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","colors","textSubtle","steps","Header","useContext","as","scale","href","nftsBaseUrl","variant","map","translationKey","WalletNotConnected","ConnectWalletButton","NextStepButton","useProfileCreation","Mint","useState","selectedBunnyId","setSelectedBunnyId","starterNfts","setStarterNfts","toastSuccess","cakeContract","useCake","useBunnyFactory","useGetCakeBalance","cakeBalance","balance","hasMinimumCakeRequired","fetchStatus","FetchStatus","SUCCESS","gte","callWithGasPrice","useCallWithGasPrice","getStarterNfts","getNftsFromCollectionApi","pancakeBunniesAddress","allPbTokens","nfts","bunnyId","address","response","fontSize","bold","num","formatUnits","nft","thumbnail","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","contract","getErc721Contract","getSigner","getPancakeProfileAddress","INITIALIZED","to","marginLeft","filter","walletNft","location","WALLET","Team","currentTeamId","handleTeamSelection","parseInt","teamValues","shuffle","Object","images","isJoinable","mr","users","toLocaleString","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","sign","difference","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExistingUserState","fetchWithTimeout","url","timeout","fetchOptions","Promise","race","fetch","_","reject","setTimeout","Error","ConfirmProfileCreationModal","onDismiss","profileContract","toJSON","fetchProfile","Toast","txHash","transactionHash","title","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","fetchAbortSignal","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","usernameToCheck","setUsernameToCheck","debouncedUsernameToCheck","useDebounce","fetchUsernameToCheck","abortSignal","API_PROFILE","method","signal","res","ok","json","error","console","abort","AbortController","signMessage","signature","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","height","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","hasProfile","useFetchCollections","PageLoader","toLowerCase","Page","fetchCollections","useFetchCollection","fetchCollection","useFetchByBunnyIdAndUpdate","nftMarket","loadingState","latestPancakeBunniesUpdateAt","isUpdatingPancakeBunnies","existingBunniesInState","useGetAllBunniesByBunnyId","existingTokensWithBunnyId","allPancakeBunnies","useNftsFromCollection","allExistingPBTokenIds","firstBunny","existingMetadata","description","collectionName","fetchMorePancakeBunnies","orderDirection","fetchNewPBAndUpdateExisting","useLoadingState","useGetCollection","checksummedCollectionAddress","isAddress","attributes","marketData","isTradable","useGetNFTInitializationState","initializationState","user","useGetNftFilters","collectionFilter","filters","activeFilters","useGetNftFilterLoadingState","NftFilterLoadingState","useGetNftOrdering","ordering","field","direction","useGetNftShowOnlyOnSale","showOnlyOnSale","useGetNftActivityFilters","activityFilters","typeFilters"],"mappings":"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","file":"static/js/11.4cb9254f.chunk.js","sourcesContent":["import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useMemo } from 'react'\nimport isEmpty from 'lodash/isEmpty'\nimport { useAppDispatch } from 'state'\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\nimport { useGetCollections, useUserNfts } from 'state/nftMarket/hooks'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useProfile } from 'state/profile/hooks'\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\nimport { useWeb3React } from '@web3-react/core'\n\nconst useFetchUserNfts = () => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { profile, isInitialized: isProfileInitialized, isLoading: isProfileLoading } = useProfile()\n  const { userNftsInitializationState } = useUserNfts()\n  const collections = useGetCollections()\n\n  const hasProfileNft = profile?.tokenId\n  const profileNftTokenId = profile?.tokenId?.toString()\n  const profileNftCollectionAddress = profile?.collectionAddress\n\n  const profileNftWithCollectionAddress = useMemo(() => {\n    if (hasProfileNft) {\n      return {\n        tokenId: profileNftTokenId,\n        collectionAddress: profileNftCollectionAddress,\n        nftLocation: NftLocation.PROFILE,\n      }\n    }\n    return null\n  }, [profileNftTokenId, profileNftCollectionAddress, hasProfileNft])\n\n  const previousProfileNftTokenId = usePreviousValue(profileNftTokenId)\n\n  // Fetch on first load when profile fetch is resolved\n  const shouldFetch =\n    account &&\n    userNftsInitializationState === UserNftInitializationState.UNINITIALIZED &&\n    isProfileInitialized &&\n    !isProfileLoading\n\n  // Fetch on account / profile change, once profile fetch is resolved\n  const hasAccountSwitched = previousProfileNftTokenId !== profileNftTokenId && !isProfileLoading && account\n\n  useEffect(() => {\n    if ((shouldFetch || hasAccountSwitched) && !isEmpty(collections)) {\n      dispatch(fetchUserNfts({ account, collections, profileNftWithCollectionAddress }))\n    }\n  }, [\n    dispatch,\n    account,\n    shouldFetch,\n    hasAccountSwitched,\n    profileNftTokenId,\n    collections,\n    profileNftWithCollectionAddress,\n  ])\n}\n\nexport default useFetchUserNfts\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { parseUnits } from '@ethersproject/units'\n\nexport const MINT_COST = parseUnits('1')\nexport const REGISTER_COST = parseUnits('0.5')\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_NFT_BUNNY_IDS = ['5', '6', '7', '8', '9'] // 'sleepy', 'dollop', 'twinkle', 'churro', 'sunny'\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST.add(REGISTER_COST)\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    collectionAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: totalCost,\n  allowance,\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          collectionAddress: action.collectionAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: string, collectionAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, collectionAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text, Link, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-top: 32px;\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\" id=\"profile-setup-title\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Total cost: 1.5 PATC')}\n      </Text>\n      <Link href={`${nftsBaseUrl}/profile`}>\n        <Button mb=\"24px\" scale=\"sm\" variant=\"secondary\">\n          {t('Back to profile')}\n        </Button>\n      </Link>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <ConnectWalletButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState, useEffect } from 'react'\nimport { formatUnits } from '@ethersproject/units'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport useToast from 'hooks/useToast'\nimport { useAppDispatch } from 'state'\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport { ApiSingleTokenData } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_NFT_BUNNY_IDS } from './config'\n\ninterface MintNftData extends ApiSingleTokenData {\n  bunnyId?: string\n}\n\nconst Mint: React.FC = () => {\n  const [selectedBunnyId, setSelectedBunnyId] = useState<string>('')\n  const [starterNfts, setStarterNfts] = useState<MintNftData[]>([])\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const collections = useGetCollections()\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(MINT_COST)\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  useEffect(() => {\n    const getStarterNfts = async () => {\n      const { data: allPbTokens } = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      const nfts = STARTER_NFT_BUNNY_IDS.map((bunnyId) => {\n        if (allPbTokens && allPbTokens[bunnyId]) {\n          return { ...allPbTokens[bunnyId], bunnyId }\n        }\n        return undefined\n      })\n      setStarterNfts(nfts)\n    }\n    if (starterNfts.length === 0) {\n      getStarterNfts()\n    }\n  }, [starterNfts])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          return response.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toString()])\n      },\n      onConfirm: () => {\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [selectedBunnyId])\n      },\n      onApproveSuccess: () => {\n        toastSuccess(t('Enabled'), t(\"Press 'confirm' to mint this NFT\"))\n      },\n      onSuccess: () => {\n        toastSuccess(t('Success'), t('You have minted your starter NFT'))\n        dispatch(fetchUserNfts({ account, collections }))\n        actions.nextStep()\n      },\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% PATC', { num: formatUnits(MINT_COST) })}\n          </Text>\n          {starterNfts.map((nft) => {\n            const handleChange = (value: string) => setSelectedBunnyId(value)\n\n            return (\n              <SelectionCard\n                key={nft?.name}\n                name=\"mintStarter\"\n                value={nft?.bunnyId}\n                image={nft?.image.thumbnail}\n                isChecked={selectedBunnyId === nft?.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft?.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% PATC is required', { num: formatUnits(MINT_COST) })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={selectedBunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { nfts, userNftsInitializationState } = useUserNfts()\n  useFetchUserNfts()\n\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Enabled'), t('Please progress to the next step.'))\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (nfts.length === 0 && userNftsInitializationState === UserNftInitializationState.INITIALIZED) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to={`${nftsBaseUrl}/collections`} style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {nfts\n              .filter((walletNft) => walletNft.location === NftLocation.WALLET)\n              .map((walletNft) => {\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={`${walletNft.collectionAddress}#${walletNft.tokenId}`}\n                    value={walletNft.tokenId}\n                    image={walletNft.image.thumbnail}\n                    isChecked={walletNft.tokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(value, walletNft.collectionAddress)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatUnits } from '@ethersproject/units'\nimport { API_PROFILE } from 'config/constants/endpoints'\nimport useToast from 'hooks/useToast'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { signMessage } from 'utils/web3React'\nimport fetchWithTimeout from 'utils/fetchWithTimeout'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\nimport useDebounce from '../../hooks/useDebounce'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const fetchAbortSignal = useRef<AbortController>(null)\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const [usernameToCheck, setUsernameToCheck] = useState<string>(undefined)\n  const debouncedUsernameToCheck = useDebounce(usernameToCheck, 200)\n\n  useEffect(() => {\n    const fetchUsernameToCheck = async (abortSignal) => {\n      try {\n        setIsLoading(true)\n        if (!debouncedUsernameToCheck) {\n          setIsValid(false)\n          setMessage('')\n          fetchAbortSignal.current = null\n        } else {\n          const res = await fetchWithTimeout(`${API_PROFILE}/api/users/valid/${debouncedUsernameToCheck}`, {\n            method: 'get',\n            signal: abortSignal,\n            timeout: 30000,\n          })\n\n          fetchAbortSignal.current = null\n\n          if (res.ok) {\n            setIsValid(true)\n            setMessage('')\n          } else {\n            const data = await res.json()\n            setIsValid(false)\n            setMessage(data?.error?.message)\n          }\n        }\n      } catch (e) {\n        setIsValid(false)\n        if (e.name !== 'AbortError') {\n          setMessage(t('Error fetching data'))\n          console.error(e)\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (fetchAbortSignal.current) {\n      fetchAbortSignal.current.abort()\n    }\n\n    fetchAbortSignal.current = new AbortController()\n\n    fetchUsernameToCheck(fetchAbortSignal.current.signal)\n  }, [debouncedUsernameToCheck, t])\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    setUsernameToCheck(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% PATC is required', { num: formatUnits(REGISTER_COST) })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","interface FetchTimeoutOptions extends RequestInit {\n  timeout?: number\n}\n\nconst fetchWithTimeout = (url, options: FetchTimeoutOptions = {}): Promise<Response> => {\n  const { timeout = 10000, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Request for ${url} timed out after ${timeout} milliseconds`))\n      }, timeout)\n    }),\n  ]) as Promise<Response>\n}\n\nexport default fetchWithTimeout\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from '@ethersproject/units'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport { REGISTER_COST } from './config'\nimport { State } from './contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: ethers.BigNumber\n  allowance: ethers.BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          return response.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\n      },\n      onConfirm: () => {\n        return callWithGasPrice(profileContract, 'createProfile', [\n          teamId,\n          selectedNft.collectionAddress,\n          selectedNft.tokenId,\n        ])\n      },\n      onSuccess: async ({ receipt }) => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% PATC', { num: formatUnits(REGISTER_COST) })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from './WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Redirect } from 'react-router'\nimport Page from 'components/Layout/Page'\nimport { useProfile } from 'state/profile/hooks'\nimport PageLoader from 'components/Loader/PageLoader'\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { useFetchCollections } from 'state/nftMarket/hooks'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => {\n  const { account } = useWeb3React()\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n\n  useFetchUserNfts()\n  useFetchCollections()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && hasProfile) {\n    return <Redirect to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} />\n  }\n\n  return (\n    <>\n      <ProfileCreationProvider>\n        <Page>\n          <Header />\n          <Steps />\n        </Page>\n      </ProfileCreationProvider>\n    </>\n  )\n}\n\nexport default ProfileCreation\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { isAddress } from 'utils'\nimport { fetchCollection, fetchCollections, fetchNewPBAndUpdateExisting } from './reducer'\nimport { State } from '../types'\nimport { NftActivityFilter, NftFilter, NftFilterLoadingState, NftToken, UserNftsState } from './types'\n\nconst MAX_GEN0_ID = 4\n\nexport const useFetchCollections = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchCollections())\n  }, [dispatch])\n}\n\nexport const useFetchCollection = (collectionAddress: string) => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchCollection(collectionAddress))\n  }, [dispatch, collectionAddress])\n}\n\n// Returns a function that fetches more NFTs for specified bunny id\n// as well as updating existing PB NFTs in state\n// Note: PancakeBunny specific\nexport const useFetchByBunnyIdAndUpdate = (bunnyId: string) => {\n  const dispatch = useAppDispatch()\n\n  const { latestPancakeBunniesUpdateAt, isUpdatingPancakeBunnies } = useSelector(\n    (state: State) => state.nftMarket.data.loadingState,\n  )\n\n  // Extra guard in case market data shifts\n  // we don't wanna fetch same tokens multiple times\n  const existingBunniesInState = useGetAllBunniesByBunnyId(bunnyId)\n  const existingTokensWithBunnyId = existingBunniesInState ? existingBunniesInState.map((nft) => nft.tokenId) : []\n\n  const allPancakeBunnies = useNftsFromCollection(pancakeBunniesAddress)\n  const allExistingPBTokenIds = allPancakeBunnies ? allPancakeBunnies.map((nft) => nft.tokenId) : []\n\n  const firstBunny = existingBunniesInState.length > 0 ? existingBunniesInState[0] : null\n\n  // If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\n  const existingMetadata = useMemo(() => {\n    return firstBunny\n      ? {\n          name: firstBunny.name,\n          description: firstBunny.description,\n          collection: { name: firstBunny.collectionName },\n          image: firstBunny.image,\n        }\n      : null\n  }, [firstBunny])\n\n  // This fetches more bunnies when called\n  const fetchMorePancakeBunnies = (orderDirection: 'asc' | 'desc') => {\n    dispatch(\n      fetchNewPBAndUpdateExisting({\n        bunnyId,\n        existingTokensWithBunnyId,\n        allExistingPBTokenIds,\n        existingMetadata,\n        orderDirection,\n      }),\n    )\n  }\n\n  return { isUpdatingPancakeBunnies, latestPancakeBunniesUpdateAt, fetchMorePancakeBunnies }\n}\n\nexport const useLoadingState = () => {\n  return useSelector((state: State) => state.nftMarket.data.loadingState)\n}\n\nexport const useGetCollections = () => {\n  return useSelector((state: State) => state.nftMarket.data.collections)\n}\n\nexport const useGetCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const collections = useGetCollections()\n  return collections[checksummedCollectionAddress]\n}\n\nexport const useNftsFromCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[checksummedCollectionAddress])\n  return nfts\n}\n\nexport const useGetAllBunniesByBunnyId = (bunnyId: string) => {\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[pancakeBunniesAddress])\n  return nfts ? nfts.filter((nft) => nft.attributes[0].value === bunnyId && nft.marketData.isTradable) : []\n}\n\nexport const useGetNFTInitializationState = () => {\n  return useSelector((state: State) => state.nftMarket.initializationState)\n}\n\nexport const useUserNfts = (): UserNftsState => {\n  return useSelector((state: State) => state.nftMarket.data.user)\n}\n\nexport const useHasGen0Nfts = (): boolean => {\n  const userNfts = useSelector((state: State) => state.nftMarket.data.user)\n  return userNfts.nfts.some((nft) => nft.attributes && Number(nft.attributes[0]?.value) <= MAX_GEN0_ID)\n}\n\nexport const useGetNftFilters = (collectionAddress: string) => {\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\n  return collectionFilter ? collectionFilter.activeFilters : {}\n}\n\nexport const useGetNftFilterLoadingState = (collectionAddress: string) => {\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\n  return collectionFilter ? collectionFilter.loadingState : NftFilterLoadingState.IDLE\n}\n\nexport const useGetNftOrdering = (collectionAddress: string) => {\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\n  return collectionFilter ? collectionFilter.ordering : { field: 'currentAskPrice', direction: 'asc' as 'asc' | 'desc' }\n}\n\nexport const useGetNftShowOnlyOnSale = (collectionAddress: string) => {\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\n  return collectionFilter ? collectionFilter.showOnlyOnSale : true\n}\n\nexport const useGetNftActivityFilters = (collectionAddress: string) => {\n  const collectionFilter: NftActivityFilter = useSelector(\n    (state: State) => state.nftMarket.data.activityFilters[collectionAddress],\n  )\n  return collectionFilter || { typeFilters: [] }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["components/HashRoute.tsx","views/Nft/market/Collection/index.tsx"],"names":["HashRoute","Component","component","hash","routeProps","location","props","React","memo","Items","lazy","Traits","Activity","IndividualNFTPageRouter","Collection","path","useRouteMatch","collectionAddress","useParams","collection","useGetCollection","useFetchCollection","exact","PageLoader"],"mappings":"6NAGMA,EAAY,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,KAASC,EAAlC,wBAChB,cAAC,IAAD,2BAAWA,GAAX,IAAuBF,UAAW,gBAAGG,EAAH,EAAGA,SAAaC,EAAhB,wBAA4BD,EAASF,OAASA,GAAQ,cAACF,EAAD,eAAeK,SAG1FC,MAAMC,KAAKR,G,kBCDpBS,EAAQC,gBAAK,kBAAM,yDACnBC,EAASD,gBAAK,kBAAM,mCACpBE,EAAWF,gBAAK,kBAAM,kCACtBG,EAA0BH,gBAAK,kBAAM,uEA0B5BI,UAxBI,WACjB,IAAQC,EAASC,cAATD,KACAE,EAAsBC,cAAtBD,kBACFE,EAAaC,YAAiBH,GAIpC,OAFAI,YAAmBJ,GAEdE,EAKH,qCACE,cAAC,EAAD,CAAWG,OAAK,EAACP,KAAMA,EAAMZ,KAAK,GAAGD,UAAWO,IAChD,cAAC,EAAD,CAAWa,OAAK,EAACP,KAAMA,EAAMZ,KAAK,SAASD,UAAWO,IACtD,cAAC,EAAD,CAAWa,OAAK,EAACP,KAAMA,EAAMZ,KAAK,UAAUD,UAAWS,IACvD,cAAC,EAAD,CAAWW,OAAK,EAACP,KAAMA,EAAMZ,KAAK,YAAYD,UAAWU,IACzD,cAAC,IAAD,CAAOG,KAAI,UAAKA,EAAL,aAAX,SACE,cAACF,EAAD,SAVG,cAACU,EAAA,EAAD","file":"static/js/38.5a497cba.chunk.js","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router'\n\nconst HashRoute = ({ component: Component, hash, ...routeProps }) => (\n  <Route {...routeProps} component={({ location, ...props }) => location.hash === hash && <Component {...props} />} />\n)\n\nexport default React.memo(HashRoute)\n","import HashRoute from 'components/HashRoute'\nimport PageLoader from 'components/Loader/PageLoader'\nimport React, { lazy } from 'react'\nimport { Route, useParams, useRouteMatch } from 'react-router'\nimport { useFetchCollection, useGetCollection } from 'state/nftMarket/hooks'\n\nconst Items = lazy(() => import('./Items'))\nconst Traits = lazy(() => import('./Traits'))\nconst Activity = lazy(() => import('./Activity'))\nconst IndividualNFTPageRouter = lazy(() => import('./IndividualNFTPage'))\n\nconst Collection = () => {\n  const { path } = useRouteMatch()\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const collection = useGetCollection(collectionAddress)\n\n  useFetchCollection(collectionAddress)\n\n  if (!collection) {\n    return <PageLoader />\n  }\n\n  return (\n    <>\n      <HashRoute exact path={path} hash=\"\" component={Items} />\n      <HashRoute exact path={path} hash=\"#items\" component={Items} />\n      <HashRoute exact path={path} hash=\"#traits\" component={Traits} />\n      <HashRoute exact path={path} hash=\"#activity\" component={Activity} />\n      <Route path={`${path}/:tokenId`}>\n        <IndividualNFTPageRouter />\n      </Route>\n    </>\n  )\n}\n\nexport default Collection\n"],"sourceRoot":""}
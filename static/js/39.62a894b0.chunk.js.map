{"version":3,"sources":["views/Nft/market/Collections/index.tsx"],"names":["ITEMS_PER_PAGE","SORT_FIELD","PageButtons","styled","div","Arrow","theme","colors","primary","Collectible","t","useTranslation","collections","useGetCollections","isMobile","useMatchBreakpoints","useState","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","useEffect","setTimeout","window","scroll","top","left","behavior","extraPages","collectionValues","Object","values","length","Math","floor","sortedCollections","useMemo","sort","a","b","parseFloat","slice","handleSort","useCallback","newField","arrow","field","as","scale","color","textAlign","style","cursor","onClick","map","collection","volume","totalVolumeBNB","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","to","nftsBaseUrl","address","alignItems","src","avatar","width","height","mr","name","ml","numberTokensListed","totalSupply"],"mappings":"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","file":"static/js/39.62a894b0.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  Table,\n  Th,\n  Td,\n  Card,\n  Flex,\n  BnbUsdtPairTokenIcon,\n  Heading,\n  useMatchBreakpoints,\n  ProfileAvatar,\n  ArrowBackIcon,\n  Text,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nexport const ITEMS_PER_PAGE = 10\n\nconst SORT_FIELD = {\n  volumeBNB: 'totalVolumeBNB',\n  items: 'numberTokensListed',\n  supply: 'totalSupply',\n}\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 1.2em;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Collectible = () => {\n  const { t } = useTranslation()\n  const collections = useGetCollections()\n  const { isMobile } = useMatchBreakpoints()\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState<boolean>(false)\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      })\n    }, 50)\n  }, [page])\n\n  useEffect(() => {\n    let extraPages = 1\n    const collectionValues = collections ? Object.values(collections) : []\n    if (collectionValues.length % ITEMS_PER_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(collectionValues.length / ITEMS_PER_PAGE) + extraPages)\n  }, [collections])\n\n  const sortedCollections = useMemo(() => {\n    const collectionValues = collections ? Object.values(collections) : []\n\n    return collectionValues\n      .sort((a, b) => {\n        if (sortField && a && b) {\n          return parseFloat(a[sortField]) > parseFloat(b[sortField])\n            ? (sortDirection ? -1 : 1) * 1\n            : (sortDirection ? -1 : 1) * -1\n        }\n        return -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n  }, [page, collections, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Collections')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <Card>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Collection')}</Th>\n                <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.volumeBNB)}>\n                  {t('Volume')}\n                  {arrow(SORT_FIELD.volumeBNB)}\n                </Th>\n                {!isMobile && (\n                  <>\n                    <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.items)}>\n                      {t('Items')}\n                      {arrow(SORT_FIELD.items)}\n                    </Th>\n                    <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.supply)}>\n                      {t('Supply')}\n                      {arrow(SORT_FIELD.supply)}\n                    </Th>\n                  </>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {sortedCollections.map((collection) => {\n                const volume = collection.totalVolumeBNB\n                  ? parseFloat(collection.totalVolumeBNB).toLocaleString(undefined, {\n                      minimumFractionDigits: 3,\n                      maximumFractionDigits: 3,\n                    })\n                  : '0'\n                return (\n                  <tr key={collection.address}>\n                    <Td>\n                      <Link to={`${nftsBaseUrl}/collections/${collection.address}`}>\n                        <Flex alignItems=\"center\">\n                          <ProfileAvatar src={collection.avatar} width={48} height={48} mr=\"16px\" />\n                          {collection.name}\n                        </Flex>\n                      </Link>\n                    </Td>\n                    <Td>\n                      <Flex alignItems=\"center\">\n                        {volume}\n                        <BnbUsdtPairTokenIcon ml=\"8px\" />\n                      </Flex>\n                    </Td>\n                    {!isMobile && (\n                      <>\n                        <Td>{collection.numberTokensListed}</Td>\n                        <Td>{collection.totalSupply}</Td>\n                      </>\n                    )}\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Collectible\n"],"sourceRoot":""}
{"version":3,"sources":["state/teams/hooks.ts","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Teams/components/TeamListCard.tsx","views/Teams/index.tsx"],"names":["useTeam","id","team","useSelector","state","teams","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","NoProfileCard","t","useTranslation","mb","isActive","alignItems","justifyContent","flexDirection","scale","as","Link","to","mt","HeaderWrapper","styled","div","theme","colors","textSubtle","TeamHeader","useProfile","profile","showProfileCallout","color","bold","TeamRank","isDark","getBackground","Body","mediaQueries","md","Info","Avatar","img","TeamName","Heading","attrs","MobileAvatar","DesktopAvatar","StyledTeamCard","Card","TeamCard","rank","avatar","src","images","alt","fontSize","name","pr","description","width","mr","style","alignSelf","points","toLocaleString","ml","users","variant","Teams","teamList","Object","values","topTeams","orderBy","Page","spin","map","index","TeamListCard"],"mappings":"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","file":"static/js/30.d5ccfd60.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You havenâ€™t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/create-profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport NoProfileCard from './NoProfileCard'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Team } from 'config/constants/types'\n\ninterface TeamCardProps {\n  rank: number\n  team: Team\n}\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst TeamRank = styled.div`\n  align-self: stretch;\n  background: ${({ theme }) => getBackground(theme)};\n  flex: none;\n  padding: 16px 0;\n  text-align: center;\n  width: 56px;\n`\n\nconst Body = styled.div`\n  align-items: start;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n    font-size: 40px;\n  }\n`\n\nconst Info = styled.div`\n  flex: 1;\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst MobileAvatar = styled.div`\n  flex: none;\n  margin-right: 8px;\n\n  ${Avatar} {\n    height: 64px;\n    width: 64px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst DesktopAvatar = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n    margin-left: 24px;\n\n    ${Avatar} {\n      height: 128px;\n      width: 128px;\n    }\n  }\n`\n\nconst StyledTeamCard = styled(Card)`\n  margin-bottom: 16px;\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\n  const { t } = useTranslation()\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n\n  return (\n    <StyledTeamCard id={`team-${team.id}`}>\n      <Flex>\n        <TeamRank>\n          <Text bold fontSize=\"24px\">\n            {rank}\n          </Text>\n        </TeamRank>\n        <Body>\n          <Info>\n            <Flex alignItems=\"center\" mb=\"16px\">\n              <MobileAvatar>{avatar}</MobileAvatar>\n              <TeamName>{team.name}</TeamName>\n            </Flex>\n            <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\n              {t(team.description)}\n            </Text>\n            <Flex>\n              <Flex>\n                {/* alignSelf for Safari fix */}\n                <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n                <Text fontSize=\"24px\" bold>\n                  {team.points.toLocaleString()}\n                </Text>\n              </Flex>\n              <Flex ml=\"24px\">\n                {/* alignSelf for Safari fix */}\n                <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n                <Text fontSize=\"24px\" bold>\n                  {team.users.toLocaleString()}\n                </Text>\n              </Flex>\n            </Flex>\n          </Info>\n          <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\n            {t('See More')}\n          </Button>\n          <DesktopAvatar>{avatar}</DesktopAvatar>\n        </Body>\n      </Flex>\n    </StyledTeamCard>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport { AutoRenewIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { useTeams } from 'state/teams/hooks'\nimport Page from 'components/Layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport TeamListCard from './components/TeamListCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Teams = () => {\n  const { t } = useTranslation()\n  const { teams, isLoading } = useTeams()\n  const teamList = Object.values(teams)\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\n        <Heading scale=\"xl\">{t('Teams')}</Heading>\n        {isLoading && <AutoRenewIcon spin />}\n      </Flex>\n      {topTeams.map((team, index) => (\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\n      ))}\n    </Page>\n  )\n}\n\nexport default Teams\n"],"sourceRoot":""}